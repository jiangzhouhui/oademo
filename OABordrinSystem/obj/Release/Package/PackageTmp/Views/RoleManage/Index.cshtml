
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@OABordrinCommon.Common.GetLanguageValueByParam("角色管理", "CommonName", "Common", ViewBag.language)</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index","Home")">@OABordrinCommon.Common.GetLanguageValueByParam("主页", "CommonName", "Common", ViewBag.language)</a>
            </li>
            <li>
                <a>@OABordrinCommon.Common.GetLanguageValueByParam("权限管理", "CommonName", "Common", ViewBag.language)</a>
            </li>
            <li class="active">
                <strong>@OABordrinCommon.Common.GetLanguageValueByParam("角色管理", "CommonName", "Common", ViewBag.language)</strong>
            </li>
        </ol>
    </div>
</div>
<div class="animated fadeInRight" style="">
    <div class="row">
        <div class="ibox ">
            <div class="ibox-title">
                <form class="form-inline" id="SearchPara">
                    <div class="form-group">
                        <input type="text" placeholder="@OABordrinCommon.Common.GetLanguageValueByParam("查询字符","Noun","Common",ViewBag.language)" name="SearchValue" class="form-control">
                    </div>
                    <button class="btn btn-w-m btn-primary" type="button" id="BtnSearch">@OABordrinCommon.Common.GetLanguageValueByParam("查询", "Common", "Common", ViewBag.language)</button>
                    @if (ViewBag.CanAdd)
                    {
                        <button type="button" class="btn btn-w-m btn-warning" id="btnAddRole">@OABordrinCommon.Common.GetLanguageValueByParam("新增角色", "Common", "Common", ViewBag.language)</button>
                    }
                </form>
            </div>
            <div class="ibox-content">
                <div class="table-responsive">
                    <div style="width:98%">
                        <table id="RoleDataTable" class="table table-striped table-bordered table-hover dataTables-example MicroYaHei-solid" style="width:100%;min-width:1074px;" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>@OABordrinCommon.Common.GetLanguageValueByParam("角色名称", "CommonName", "Common", ViewBag.language)</th>
                                    <th>@OABordrinCommon.Common.GetLanguageValueByParam("人员列表", "CommonName", "Common", ViewBag.language)</th>
                                    <th>地区</th>
                                    <th>@OABordrinCommon.Common.GetLanguageValueByParam("所属部门", "CommonName", "Common", ViewBag.language)</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("~/Views/RoleManage/RoleManageEdit.cshtml")
@section scripts{

    <!-- jquery-ui -->
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui.js"></script>

    <!-- DataTables CSS -->
    <link href="~/OpenResouce/css/plugins/dataTables/dataTables.bootstrap.css" rel="stylesheet" />
    <link href="~/OpenResouce/css/plugins/dataTables/dataTables.responsive.css" rel="stylesheet" />
    <link href="~/OpenResouce/css/plugins/dataTables/dataTables.tableTools.min.css" rel="stylesheet" />

    <!-- DataTables JS -->
    <script src="~/OpenResouce/js/plugins/dataTables/jquery.dataTables.js"></script>
    <script src="~/OpenResouce/js/plugins/dataTables/dataTables.bootstrap.js"></script>
    <script src="~/OpenResouce/js/plugins/dataTables/dataTables.responsive.js"></script>
    <script src="~/OpenResouce/js/plugins/dataTables/dataTables.tableTools.min.js"></script>
    <script type="text/javascript">
        var $RoleDataTable = $("#RoleDataTable"), $RoleManageEdit = $("#RoleManageEdit");
        var RoleDataTableObj;
        RoleManageEditParam = app.util.getEditParam($RoleManageEdit);
        $(document).ready(function () {
            //加载对应的数据流程
            RoleDataTableObj = $RoleDataTable.dataTable({
                "bServerSide": true,
                "bProcessing": false,
                "bFilter": false,
                "bAutoWidth": true,
                "sAjaxSource": '/RoleManage/GetRoleManageList',
                "fnServerData": RetrieveRoleManageData,
                "aoColumns": [
                        { "data": "KEYED_NAME", "sWidth": 500 },
                        { "data": "PersonList", "bSortable": false },
                        { "data": "Region", "bSortable": false },
                        { "data": "Department", "bSortable": false }
                ],
                "oLanguage": {
                    "sLengthMenu": "_MENU_",
                    "sInfo": " @OABordrinCommon.Common.GetLanguageValueByParam("从", "CommonName", "Common", ViewBag.language) _START_ @OABordrinCommon.Common.GetLanguageValueByParam("到", "CommonName", "Common", ViewBag.language)  _END_ /@OABordrinCommon.Common.GetLanguageValueByParam("共", "CommonName", "Common", ViewBag.language) _TOTAL_ @OABordrinCommon.Common.GetLanguageValueByParam("条数据", "CommonName", "Common", ViewBag.language) "

                },
                "aLengthMenu": [15, 25, 50, 100]
            });
            LoadAutocompleteData();
            SetAutocomplete();

            //加载地区信息
            GetRegionList();
        });


        function GetRoleManageSearchParam(aoData) {
            //DataTable固定传入参数
            var sEcho = aoData[0].value;
            var iDisplayStart = aoData[3].value;
            var iDisplayLength = aoData[4].value;
            //排序数组中的索引值
            var index = aoData[aoData.length - 3].value;
            //根据索引获取排序名称
            var iSortTitle = aoData[5 + index * 2].value;
            //获取排序的方式
            var sSortType = aoData[aoData.length - 2].value;

            var searchValue = $("input[name='SearchValue']").val();

            return { "sEcho": sEcho, "iDisplayStart": iDisplayStart, "iDisplayLength": iDisplayLength, "iSortTitle": iSortTitle, "sSortType": sSortType, "searchValue": searchValue };
        }

        function RetrieveRoleManageData(sSource, aoData, fnCallback) {
            $.ajax({
                url: '/RoleManage/GetRoleManageList',//这个就是请求地址对应sAjaxSource
                data: GetRoleManageSearchParam(aoData),
                dataType: 'json',
                success: function (result) {
                    fnCallback(result);//把返回的数据传给这个方法就可以了,datatable会自动绑定数据的
                },
                error: function (msg) {
                }
            });
        }


        //查询获取数据列表
        $("#BtnSearch").click(function () {
            RoleDataTableObj.fnDraw();
            //dataList = [];
            //var searchValue = $("input[name='SearchValue']").val();
            //$.ajax({
            //    url: '/RoleManage/GetRoleManageList',
            //    data: { "SearchValue": searchValue },
            //    dataType: "json",
            //    success: function (ans) {
            //        if (ans.error.length > 0) {
            //            return;
            //        }
            //        if (ans.data != null) {
            //            for (var i = 0; i < ans.data.length; i++) {
            //                var item = ans.data[i];
            //                var strHtml = "<div class='row'><div class='col-md-8'>" + item.RoleName + "</div><div class='col-md-4' style='text-align:right;padding-right:10%;'>";
            //                strHtml += "<a class='glyphicon glyphicon-cog configRole' title='配置'  RoleId='" + item.Id + "'></a>";
            //                strHtml += "&nbsp;&nbsp;&nbsp;&nbsp;<a class='glyphicon glyphicon-trash deleteRole' title='删除' RoleId='" + item.Id + "'></a>";
            //                strHtml += "</div></div>";
            //                dataList.push({ "RoleName": strHtml, "PersonList": item.PersonList, "Department": item.Department });
            //            }
            //        }
            //        RoleDataTableObj.fnClearTable(true);
            //        if (dataList.length != 0) {
            //            RoleDataTableObj.fnAddData(dataList, true);

            //        }
            //    }
            //});
        });

        $("#btnAddRole").click(function () {
            app.util.clearError($RoleManageEdit);
            app.util.bindValue(RoleManageEditParam, "");
            $RoleManageEdit.modal("show");
        });

        $("#SaveRoleManage").click(function () {
            //验证数据是否填写完整，如果完整提交
            if (app.util.ValidationFromData($RoleManageEdit)) {
                $.ajax({
                    url: '/RoleManage/SaveRoleManage',
                    data: app.util.serializeParamArray(RoleManageEditParam),
                    dataType: "json",
                    success: function (ans) {
                        if (ans.error.length > 0) {
                            app.util.onError(ans.error, $RoleManageEdit);
                            return;
                        }
                        $RoleManageEdit.modal('hide');
                        if (RoleManageEditParam.Id != "") {
                            RoleDataTableObj.fnPageChange(app.util.DTCurrentPage(RoleDataTableObj));
                        }
                        else {
                            RoleDataTableObj.fnDraw();
                        }
                    }
                });
            }
        });


        $RoleDataTable.delegate(".deleteRole", "click", function () {
            if (confirm("@OABordrinCommon.Common.GetLanguageValueByParam("您确定要删除吗？", "CommonName", "Common", ViewBag.language)")) {
                $.ajax({
                    url: '/RoleManage/DeleteRoleManage',
                    data: { "Id": $(this).attr("RoleId") },
                    dataType: "json",
                    success: function (ans) {
                        if (ans.error.length > 0) {
                            dialog.showMsg("@OABordrinCommon.Common.GetLanguageValueByParam("错误提示", "CommonName", "Common", ViewBag.language)！", ans.error[0].value);
                            return;
                        }
                        RoleDataTableObj.fnPageChange(app.util.DTCurrentPage(RoleDataTableObj));
                    }
                });
            }
        }).delegate(".configRole", "click", function () {
            $.ajax({
                url: '/RoleManage/GetRoleManageById',
                data: { "Id": $(this).attr("RoleId") },
                dataType: "json",
                success: function (ans) {
                    if (ans.error.length > 0) {
                        dialog.showMsg("@OABordrinCommon.Common.GetLanguageValueByParam("错误提示", "CommonName", "Common", ViewBag.language)！", ans.error[0].value);
                        return;
                    }
                    if ('@ViewBag.LoginName' != "admin") {
                        RoleManageEditParam.KEYED_NAME.attr("disabled", "disabled")
                    }
                    else {
                        RoleManageEditParam.KEYED_NAME.removeAttr("disabled");
                    }
                    app.util.clearError($RoleManageEdit);
                    app.util.bindValue(RoleManageEditParam, ans);
                    $RoleManageEdit.modal('show');
                }
            });
        });

        //autocomplete
        var availableTags = [];
        function SetAutocomplete() {
            $("#PersonList")
             // don't navigate away from the field on tab when selecting an item
            .on("keydown", function (event) {
                if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).autocomplete("instance").menu.active) {
                    event.preventDefault();
                }
            })
            .autocomplete({
                minLength: 0,
                source: function (request, response) {
                    // delegate back to autocomplete, but extract the last term
                    response($.ui.autocomplete.filter(
                      availableTags, extractLast(request.term)));
                },
                focus: function () {
                    // prevent value inserted on focus
                    return false;
                },
                select: function (event, ui) {
                    var terms = split(this.value);
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join(";");
                    return false;
                }
            });
        }

        function split(val) {
            return val.split(/;\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

        function LoadAutocompleteData() {
            //获取User数据
            $.ajax({
                url: '/AutoComplete/GetDelegateToNames',
                dataType: "json",
                async: false,
                success: function (ans) {
                    if (ans.error.length > 0) {
                        return false;
                    }
                    availableTags = [];
                    if (ans.data != null && ans.data.length > 0) {
                        for (var i = 0; i < ans.data.length; i++) {
                            availableTags.push(ans.data[i]);
                        }
                    }
                }
            });
        }


        //获取地区列表
        function GetRegionList() {
            $.ajax({
                url: '/AutoComplete/GetRegionList',
                dataType: "json",
                async: false,
                success: function (ans) {
                    if (ans.error.length > 0) {
                        return false;
                    }
                    RoleManageEditParam.Region.empty();
                    RoleManageEditParam.Region.append("<option value=''>选择地区</option>")
                    if (ans.data != null && ans.data.length > 0) {
                        for (var i = 0; i < ans.data.length; i++) {
                            var value = ans.data[i];
                            RoleManageEditParam.Region.append("<option value='" + value + "'>" + value + "</option>");
                        }
                    }
                }
            });
        }




    </script>
}
